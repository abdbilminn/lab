from pygame import *

display.set_caption('Лабиринт')
window = display.set_mode((700, 500))
picture = transform.scale(image.load('background.png'),(700,500))

class GameSprite(sprite.Sprite): # Класс - родитель для других классов.
    def init(self, player_image, player_x, player_y, width, height):
        #Вызываем конструктор класса Sprite
        sprite.Sprite.init(self)
        # Каждый спрайт должен хранить свойство image - изображение
        self.image = transform.scale(image.load(player_image), (width, height))
        #self.speed = speed
        #  каждый спрайт должен хранить свойство rect - прямоугольник, в который он вписан
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    # метод, отрисовывающий героя на окне
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))


class Player(GameSprite):
    def init(self, player_image, player_x, player_y, size_x, size_y, player_x_speed, player_y_speed, width, height,speed):
        super().init(player_image, player_x, player_y, width, height)
        self.x_speed = player_x_speed
        self.y_speed = player_y_speed
    def update(self):
        if packman.rect.x <= win_width - 80 and packman.x_speed > 0 or packman.rect.x >= 0 and packman.x_speed < 0:
            self.rect.x += self.x_speed
        platforms_touched = sprite.spritecollide(self, barriers, False)
        if self.x_speed > 0:
            for p in platforms_touched:
                self.rect.right = min(self.rect.right, p.rect.left)
        elif self.x_speed < 0:
            for p in platforms_touched:
                self.rect.left = max (self.rect.left, p.rect.left)
        if packman.rect.y <= win_height - 80 and packman.y_speed > 0 or packman.rect.y >= 0 and packman.y_speed <0:
            self.rect.y += self.y_speed
        
        platforms_touched = sprite.spritecollide(self, barriers, False)
        if self.y_speed > 0:
            for p in platforms_touched:
                self.rect.bottom = min(self.rect.bottom, p.rect.top)
        elif self.y_speed < 0:
            for p in platforms_touched:
                self.rect.top = max(self.rect.top, p.rect.bottom)

    #def update(self):
        #self.rect.x += self.x_speed
        #self.rect.y += self.y_speed
    




win_width = 700
win_height = 500
display.set_caption('Лабиринт')
window = diaplay.set_mode((win_width, win_height))
back = (119,210,223)

barriers = sprite.Group()

w1 = GameSprite('wood.png', win_width / 2 - win_width / 3, win_height / 2, 300, 50)
w2 = GameSprite('wood.png', 370,100,50,400)

barriers.add(w1)
barriers.add(w2)

packman = Player('hero.png', 5, win_width - 80, 80, 80, 0, 0)
monster = GameSprite('brick.png', win_width - 80, 180, 80, 80)
final_sprite = GameSprite('brick.png', win_width - 85, win_height - 100, 80, 80)

finish = False
run = True

class Enemy(GameSprite):
    side = 'left'
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        GameSprite.__init__(self, player_image, player_x, player_y, size_x, size_y)
        self.speed = player_speed


    def update(self):
        if self.rect.x <= 420:
            self.side = 'right'
        if self.rect.x >= win_width -85:
            self.side = 'left'
        if self.side == 'left':
            self.rect.x -= self.speed
        else:
            self.rect.x += self.speed

class Bullet(GameSprite):
    def __init__ (self, player_image, player_x, player_y, size_x, size_y, player_speed):
        GameSprite.__init__(self, player_image, player_x, player_y, size_x, size_y)
        self.speed = player_speed
    def update(self):
        self.rect.x += self.x_speed
        if self.rect.x > win_width + 10:
        self.kill()

while run:
    time.delay(50)

    for e in event.get():
        if e.type == QUIT:
            run = False
        elif e.type == KEYDOWN:
            if e.key == K_LEFT:
                packman.x_speed = -5
            elif e.key == K_RIGHT:
                packman.x_speed = 5
            elif e.key == K_UP:
                packman.y_speed = -5
            elif e.key == K_DOWN:
                packman.y_speed = 5
        elif e.type == KEYUP:
            if e.key == K_LEFT:
                packman.x_speed = 0
            elif e.key == K_RIGHT:
                packman.x_speed = 0
            elif e.key == K_UP:
                packman.y_speed = 0
            elif e.key == K_DOWN:
                packman.y_speed = 0
    if not finish:
        window.fill(back)
        w1.reset()
        w2.reset()
        barriers.draw(window)
        monster.reset()
        final_sprite.reset()
        packman.reset()
        packman.update()
        
        if sprite.collide_rect(packman, monster):
            finish = True
            img = image.load('gamea;dlasdkasldas.png')
            d = img.get_width() // img.get_height()
            window.fill((255,255,255))
            window.blit(transform.scale(img, (win_height * d, win_height)), (90,0))
        
        if sprite.collide_rect(packman, final_sprite):
            finish = True
            img = image.load('walfsf')
            window.fill((255,255,255))
            window.blit(transform.scale(img, (win_width, win_height)), (0,0))


display.update()